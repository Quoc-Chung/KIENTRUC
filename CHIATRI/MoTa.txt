       6 
value :   1    -3     6     4     8     2
index :   0     1     2     3     4     5 


       6 
  1    -3     6     4     8     2
FindMax(a,   0,    5) 
       if(left != right){

       }
       else{ 
            int mid = 2 
            int  x = FindMax (a,0,2)
                     if(left != right){
                         
                     }
                     else{
                        int mid = 1 ; 
                        int x = FindMax (a, 0 ,1); 
                             if(left != right){

                             }
                             else{
                                     int mid = 1 /2  = 0 
                                     int x = FindMax (a,0,0) = a[0] = 1
                             }

                            
                        int y = FindMax (a, 2,2);
                             if(left == right){
                                     int y = return a[2] = 6
                             }
                     }


            int  y = FindMax (a,3,5)
       }



int FindMax( int a[] ,int left,int right){
    if(left == right ){ 
        return a[left]; // Phần tử duy nhất thì 
    }
    else {
        int mid  = (left + right )/2;
        int x = FindMax(a,left,mid); 
        int y = FindMax(a,mid+1,right);
        
        return max(x,y);
    }
}
